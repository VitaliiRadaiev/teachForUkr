{"version":3,"file":"sections/tabs/tab-nav-btn/index.js","mappings":";;;;;;;;;;;;;;;AAAA,cAAc,aAAa,+CAA+C,gDAAgD,eAAe,QAAQ,IAAI,0CAA0C,yCAAyC,SAAgB,gBAAgB,wCAAwC,IAAI,mDAAmD,SAAS,iEAAe,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGlW;AACV;AACC;AAAA;AAGT,SAASK,IAAIA,CAAC;EAAEC,UAAU;EAAEC;AAAc,CAAC,EAAE;EAC3D,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGH,UAAU;EACpC,MAAMI,UAAU,GAAGV,sEAAa,CAAC;IAChCW,SAAS,EAAET,gDAAI,CACd,oOAAoO,EACpOO,OACD;EACD,CAAC,CAAC;EAEF,oBACCL,sDAAA;IAAA,GAASM,UAAU;IAAE,wBAAgB;IAAAE,QAAA,eACpCR,sDAAA,CAACH,6DAAQ;MACRY,WAAW,EAAC,sCAAQ;MACpBC,KAAK,EAAEN,IAAK;MACZO,OAAO,EAAC,MAAM;MACdC,cAAc,EAAE,EAAG;MACnBC,SAAS,EAAE,KAAM;MACjBC,OAAO,EAAEA,CAAA,KAAM,CAAE,CAAE;MACnBC,SAAS,EAAEA,CAAA,KAAM,CAAE,CAAE;MACrBC,QAAQ,EAAGC,GAAG,IAAK;QAClBd,aAAa,CAAC;UACbC,IAAI,EAAEa;QACP,CAAC,CAAC;MACH;IAAE,CACF;EAAC,CACE,CAAC;AAER;;;;;;;;;;;ACnCA;;;;;;;;;;;;;;;ACAe,SAASC,IAAIA,CAAA,EAAG;EAC9B,OAAO,IAAI;AACZ;;;;;;;;;;ACFA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNsD;AAE5B;AACA;AACU;AAEpCC,oEAAiB,CAACG,6CAAa,EAAE;EAChCF,IAAI;EACJC,IAAIA,+CAAAA;AACL,CAAC,CAAC,C","sources":["webpack://gutenberg-custom-blocks/./node_modules/clsx/dist/clsx.mjs","webpack://gutenberg-custom-blocks/./src/sections/tabs/tab-nav-btn/edit.js","webpack://gutenberg-custom-blocks/./src/sections/tabs/tab-nav-btn/editor.scss","webpack://gutenberg-custom-blocks/./src/sections/tabs/tab-nav-btn/save.js","webpack://gutenberg-custom-blocks/external window [\"wp\",\"blockEditor\"]","webpack://gutenberg-custom-blocks/external window [\"wp\",\"blocks\"]","webpack://gutenberg-custom-blocks/external window \"ReactJSXRuntime\"","webpack://gutenberg-custom-blocks/webpack/bootstrap","webpack://gutenberg-custom-blocks/webpack/runtime/compat get default export","webpack://gutenberg-custom-blocks/webpack/runtime/define property getters","webpack://gutenberg-custom-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://gutenberg-custom-blocks/webpack/runtime/make namespace object","webpack://gutenberg-custom-blocks/./src/sections/tabs/tab-nav-btn/index.js"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import {\r\n\tuseBlockProps,\r\n\tRichText\r\n} from \"@wordpress/block-editor\";\r\nimport \"./editor.scss\";\r\nimport clsx from \"clsx\";\r\n\r\n\r\nexport default function Edit({ attributes, setAttributes }) {\r\n\tconst { text, classes } = attributes;\r\n\tconst blockProps = useBlockProps({\r\n\t\tclassName: clsx(\r\n\t\t\t'btn btn-secondary btn-secondary-sm grow-0 shrink-0 font-medium [&.btn]:min-h-[44px] lg:min-h-[50px] [&.btn]:px-[20px] [&.btn]:bg-transparent [&.btn]:text-dark-primary [&.btn.active]:bg-[var(--accent)] [&.btn.active]:text-white',\r\n\t\t\tclasses\r\n\t\t)\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div {...blockProps} data-tab-trigger >\r\n\t\t\t<RichText\r\n\t\t\t\tplaceholder=\"Кнопка\"\r\n\t\t\t\tvalue={text}\r\n\t\t\t\ttagName=\"span\"\r\n\t\t\t\tallowedFormats={[]}\r\n\t\t\t\tmultiline={false}\r\n\t\t\t\tonSplit={() => { }}\r\n\t\t\t\tonReplace={() => { }}\r\n\t\t\t\tonChange={(val) => {\r\n\t\t\t\t\tsetAttributes({\r\n\t\t\t\t\t\ttext: val,\r\n\t\t\t\t\t});\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}","// extracted by mini-css-extract-plugin\nexport {};","export default function Save() {\r\n\treturn null;\r\n}\r\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from \"@wordpress/blocks\";\r\n\r\nimport edit from \"./edit\";\r\nimport save from \"./save\";\r\nimport metadata from \"./block.json\";\r\n\r\nregisterBlockType(metadata.name, {\r\n\tedit,\r\n\tsave\r\n});\r\n"],"names":["useBlockProps","RichText","clsx","jsx","_jsx","Edit","attributes","setAttributes","text","classes","blockProps","className","children","placeholder","value","tagName","allowedFormats","multiline","onSplit","onReplace","onChange","val","Save","registerBlockType","edit","save","metadata","name"],"sourceRoot":""}